/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {
  kernel_address: string;
  owner?: string | null;
}
export type ExecuteMsg =
  | {
      add_path: {
        address: Addr;
        name: string;
        parent_address?: AndrAddr | null;
      };
    }
  | {
      add_symlink: {
        name: string;
        parent_address?: AndrAddr | null;
        symlink: AndrAddr;
      };
    }
  | {
      add_child: {
        name: string;
        parent_address: AndrAddr;
      };
    }
  | {
      register_user: {
        address?: Addr | null;
        username: string;
      };
    }
  | {
      register_library: {
        lib_address: Addr;
        lib_name: string;
      };
    }
  | {
      register_user_cross_chain: {
        address: string;
        chain: string;
      };
    }
  | {
      ownership: OwnershipMessage;
    };
export type Addr = string;
export type AndrAddr = string;
export type OwnershipMessage =
  | ("revoke_ownership_offer" | "accept_ownership" | "disown")
  | {
      update_owner: {
        expiration?: Expiry | null;
        new_owner: Addr;
      };
    };
export type Expiry =
  | {
      from_now: Milliseconds;
    }
  | {
      at_time: Milliseconds;
    };
export type Milliseconds = number;
export type QueryMsg =
  | {
      resolve_path: {
        path: AndrAddr;
      };
    }
  | {
      sub_dir: {
        limit?: number | null;
        max?: SubDirBound | null;
        min?: SubDirBound | null;
        path: AndrAddr;
      };
    }
  | {
      paths: {
        addr: Addr;
      };
    }
  | {
      get_username: {
        address: Addr;
      };
    }
  | {
      get_library: {
        address: Addr;
      };
    }
  | {
      resolve_symlink: {
        path: AndrAddr;
      };
    }
  | {
      version: {};
    }
  | {
      type: {};
    }
  | {
      owner: {};
    }
  | {
      kernel_address: {};
    };
export interface SubDirBound {
  address: Addr;
  name: string;
}
export type String = string;
export interface KernelAddressResponse {
  kernel_address: Addr;
}
export interface ContractOwnerResponse {
  owner: string;
}
export type ArrayOfString = string[];
export interface SubDirResponse {
  subdirs: PathInfo[];
}
export interface PathInfo {
  address: Addr;
  name: string;
  parent_address: Addr;
  symlink?: AndrAddr | null;
}
export interface TypeResponse {
  ado_type: string;
}
export interface VersionResponse {
  version: string;
}
export type VfsContractTsExecuteMsg = ExecuteMsg;
