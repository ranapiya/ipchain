/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.35.7.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import {
  InstantiateMsg,
  ExecuteMsg,
  Addr,
  AndrAddr,
  OwnershipMessage,
  Expiry,
  Milliseconds,
  QueryMsg,
  SubDirBound,
  String,
  KernelAddressResponse,
  ContractOwnerResponse,
  ArrayOfString,
  SubDirResponse,
  PathInfo,
  TypeResponse,
  VersionResponse,
} from "./VfsContractTs.types";
import { CamelCasedProperties } from "type-fest";
export abstract class VfsContractTsExecuteMsgBuilder {
  static addPath = ({
    address,
    name,
    parentAddress,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        add_path: unknown;
      }
    >["add_path"]
  >): ExecuteMsg => {
    return {
      add_path: {
        address,
        name,
        parent_address: parentAddress,
      } as const,
    };
  };
  static addSymlink = ({
    name,
    parentAddress,
    symlink,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        add_symlink: unknown;
      }
    >["add_symlink"]
  >): ExecuteMsg => {
    return {
      add_symlink: {
        name,
        parent_address: parentAddress,
        symlink,
      } as const,
    };
  };
  static addChild = ({
    name,
    parentAddress,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        add_child: unknown;
      }
    >["add_child"]
  >): ExecuteMsg => {
    return {
      add_child: {
        name,
        parent_address: parentAddress,
      } as const,
    };
  };
  static registerUser = ({
    address,
    username,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        register_user: unknown;
      }
    >["register_user"]
  >): ExecuteMsg => {
    return {
      register_user: {
        address,
        username,
      } as const,
    };
  };
  static registerLibrary = ({
    libAddress,
    libName,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        register_library: unknown;
      }
    >["register_library"]
  >): ExecuteMsg => {
    return {
      register_library: {
        lib_address: libAddress,
        lib_name: libName,
      } as const,
    };
  };
  static registerUserCrossChain = ({
    address,
    chain,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        register_user_cross_chain: unknown;
      }
    >["register_user_cross_chain"]
  >): ExecuteMsg => {
    return {
      register_user_cross_chain: {
        address,
        chain,
      } as const,
    };
  };
  static ownership = (ownershipMessage: OwnershipMessage): ExecuteMsg => {
    return {
      ownership: ownershipMessage,
    };
  };
}
export abstract class VfsContractTsQueryMsgBuilder {
  static resolvePath = ({
    path,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        resolve_path: unknown;
      }
    >["resolve_path"]
  >): QueryMsg => {
    return {
      resolve_path: {
        path,
      } as const,
    };
  };
  static subDir = ({
    limit,
    max,
    min,
    path,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        sub_dir: unknown;
      }
    >["sub_dir"]
  >): QueryMsg => {
    return {
      sub_dir: {
        limit,
        max,
        min,
        path,
      } as const,
    };
  };
  static paths = ({
    addr,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        paths: unknown;
      }
    >["paths"]
  >): QueryMsg => {
    return {
      paths: {
        addr,
      } as const,
    };
  };
  static getUsername = ({
    address,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        get_username: unknown;
      }
    >["get_username"]
  >): QueryMsg => {
    return {
      get_username: {
        address,
      } as const,
    };
  };
  static getLibrary = ({
    address,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        get_library: unknown;
      }
    >["get_library"]
  >): QueryMsg => {
    return {
      get_library: {
        address,
      } as const,
    };
  };
  static resolveSymlink = ({
    path,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        resolve_symlink: unknown;
      }
    >["resolve_symlink"]
  >): QueryMsg => {
    return {
      resolve_symlink: {
        path,
      } as const,
    };
  };
  static version = (): QueryMsg => {
    return {
      version: {} as const,
    };
  };
  static type = (): QueryMsg => {
    return {
      type: {} as const,
    };
  };
  static owner = (): QueryMsg => {
    return {
      owner: {} as const,
    };
  };
  static kernelAddress = (): QueryMsg => {
    return {
      kernel_address: {} as const,
    };
  };
}
